v2ray
	RF:
		https://www.v2ray.com/chapter_00/install.html
		https://toutyrater.github.io/prep/install.html
	1.安装v2ray：
		bash <(curl -L -s https://install.direct/go.sh)

	2.启动v2ray程序：
		主程序在：	/usr/bin/v2ray/v2ray，
		默认配置文件路径：	/etc/v2ray/config.json
		日志文件：	/var/log/v2ray/access.log  error.log

		在ubuntu 14.04.5 中启动v2ray服务：
		sudo systemctl  start | stop | restart | status v2ray
		使用ps可看到进程：
		/usr/bin/v2ray/v2ray -config /etc/v2ray/config.json

	UUID生成:
		cat /proc/sys/kernel/random/uuid


	config.json说明：

		"users": [
		{
		  "id": "c760a93b-b652-44a0-97d8-24b7a889c92c",
		  "alterId": 64,
		  "email": "t@t.tt",
		  "security": "chacha20-poly1305"
		}
		]
		其中security：加密方式，客户端将使用配置的加密方式发送数据，服务器端自动识别，无需配置。
	  		  security: "aes-128-gcm" | "chacha20-poly1305" | "auto" | "none"



termial 使用v2ray的socks5 上网：

	1.命令：   nmap localhost
		可看到：1081/tcp open  pvuniwien
		使用的socks5端口是1081

	2.命令：   curl ip.gs
		可以查看本地IP信息，可以用来判断是否进行了代理：
			Current IP / 当前 IP: 110.86.28.206
			ISP / 运营商:  ChinaTelecom
			City / 城市: Xiamen Fujian
			Country / 国家: China
	3.命令：	sudo apt-get install polipo
		安装代理工具

	4.配置代理工具：  sudo vi /etc/polipo/config 
	其内容为：
	  # set to use tor proxy
	  socksParentProxy = localhost:1081
	  socksProxyType = socks5
	  # polipo proxy port ,want to use
	  proxyPort = 1090
	  
	  # allow other ip to use this http proxy
	  proxyAddress = "0.0.0.0"

	5.重启服务：
	   sudo service polipo restart

	6.terminal导入代理:
	   export http_proxy=http://localhost:1090
	   export https_proxy=http://localhost:1090

	7.验证：
	   curl ip.gs
	   curl www.google.com

TLS配置:服务器端配置了TLS,客户端可以不配TLS也可以上网的。
	RF：
		https://toutyrater.github.io/advanced/tls.html
		https://github.com/Neilpang/acme.sh
	服务器端配置ＴＬＳ，由于Ｖ2ray已经支持这个协议，
	而实际要做的就是根据你的域名申请一个证书密钥，加密数据；
	1.申请证书需要安装 acme.sh
		curl  https://get.acme.sh | sh

		  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
				                         Dload  Upload   Total   Spent    Left  Speed
		100   705  100   705    0     0    661      0  0:00:01  0:00:01 --:--:--   661
		  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
				                         Dload  Upload   Total   Spent    Left  Speed
		100  164k  100  164k    0     0   182k      0 --:--:-- --:--:-- --:--:--  182k
		[Wed Nov 28 09:13:06 CST ] Installing from online archive.
		[Wed Nov 28 09:13:06 CST ] Downloading https://github.com/Neilpang/acme.sh/archive/master.tar.gz
		[Wed Nov 28 09:13:07 CST ] Extracting master.tar.gz
		[Wed Nov 28 09:13:07 CST ] It is recommended to install socat first.
		[Wed Nov 28 09:13:07 CST ] We use socat for standalone server if you use standalone mode.
		[Wed Nov 28 09:13:07 CST ] If you don't use standalone mode, just ignore this warning.
		[Wed Nov 28 09:13:07 CST ] Installing to /root/.acme.sh
		[Wed Nov 28 09:13:07 CST ] Installed to /root/.acme.sh/acme.sh
		[Wed Nov 28 09:13:07 CST ] Installing alias to '/root/.bashrc'
		[Wed Nov 28 09:13:07 CST ] OK, Close and reopen your terminal to start using acme.sh
		[Wed Nov 28 09:13:07 CST ] Installing cron job
		48 0 * * * "/root/.acme.sh"/acme.sh --cron --home "/root/.acme.sh" > /dev/null
		[Wed Nov 28 09:13:07 CST ] Good, bash is found, so change the shebang to use bash as preferred.
		[Wed Nov 28 09:13:07 CST ] OK
		[Wed Nov 28 09:13:07 CST ] Install success!
		提示缺少socat,不使用standalone模式，那么可以忽略它，安装以下工具后，安装 acme.sh正常；
		apt-get install socat

	2.使用 acme.sh 生成证书：如果服务器没有开启80端口等网页的实际功能，可以加入选项standalone，它可以模拟出服务器80端口功能打开进行证书的生成，
		而且这80端口需要被VPS前端的防火墙放行，因为证书的生成需要远端证书服务器进行，
		而这个需要远端证书服务器访问本主机的80端口（aliyun的vps需要在安全组规则里进行设置80端口可以外部访问）；
		前提是需要在目标服务器上进行操作。
		.acme.sh/acme.sh --issue --standalone -k ec-256 -d hao.free1144.tk

		-k 表示密钥长度，后面的值可以是 ec-256 、ec-384、2048、3072、4096、8192，带有 ec 表示生成的是 ECC 证书，没有则是 RSA 证书。
		在安全性上 256 位的 ECC 证书等同于 3072 位的 RSA 证书；
		证书有两种，一种是 ECC 证书（内置公钥是 ECDSA 公钥），一种是 RSA 证书（内置 RSA 公钥）。
		ECC 的密钥长度比 RSA 短得多（加密解密会更快）。
		但问题是 ECC 的兼容性会差一些，Android 4.x 以下和 Windows XP 不支持。
		只要您的设备不是非常老的老古董，强烈建议使用 ECC 证书。
		成功后，
		[Wed Nov 28 13:15:13 CST ] Your cert is in  /root/.acme.sh/hao.free1144.tk_ecc/hao.free1144.tk.cer 
		[Wed Nov 28 13:15:13 CST ] Your cert key is in  /root/.acme.sh/hao.free1144.tk_ecc/hao.free1144.tk.key 
		[Wed Nov 28 13:15:13 CST ] The intermediate CA cert is in  /root/.acme.sh/hao.free1144.tk_ecc/ca.cer 
		[Wed Nov 28 13:15:13 CST ] And the full chain certs is there:  /root/.acme.sh/hao.free1144.tk_ecc/fullchain.cer 

	3.安装证书到本地
		~/.acme.sh/acme.sh --installcert -d hao.free1144.tk --fullchainpath /etc/v2ray/v2ray.crt --keypath /etc/v2ray/v2ray.key --ecc
		在/etc/v2ray路径上有以下文件生成。
		-rw-r--r-- 1 root root 3282 Nov 28 13:18 v2ray.crt
		-rw------- 1 root root  302 Nov 28 13:18 v2ray.key

	4.证书更新
		由于 Let's Encrypt 的证书有效期只有 3 个月，因此需要 90 天至少要更新一次证书，acme.sh 脚本会每 60 天自动更新证书。也可以手动更新。
		手动更新 ECC 证书，执行：
		$ sudo ~/.acme.sh/acme.sh --renew -d hao.free1144.tk --force --ecc

		如果是 RSA 证书则执行：
		$ sudo ~/.acme.sh/acme.sh --renew -d hao.free1144.tk --force



caddy
	RF:
	https://caddyserver.com/tutorial

	默认的配置文件：        
		CONF="/usr/local/caddy/Caddyfile"
        CONF="/etc/caddy/Caddyfile"


nginx
	RF:
	https://zorz.cc/post/nginx-tlswebsocket-web-v2ray.html
	1.安装
		apt-get install nginx
		配置文件路径：
		ls /etc/nginx/
			conf.d          koi-win           naxsi.rules          proxy_params     sites-enabled
			fastcgi_params  mime.types        naxsi-ui.conf.1.4.1  scgi_params      uwsgi_params
			koi-utf         naxsi_core.rules  nginx.conf           sites-available  win-utf

	2.重启
		service nginx restart
		 * Restarting nginx nginx
		   ...done.

		service nginx stop








一些免费的v2ray服务器分享：
https://v2fire.tk
美国节点「1」100GB/天 凌晨重启更换UUID



